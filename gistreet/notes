1/2
After spending tens of hours tring to get the image to render on the product details page, it was finally a case of removing many=True in the ProductSerializer imported method. seems like the many=true flag was turning the img into a list object and the browser couldnt render it.

The same flag is needed to render the latestproducslist, without it the images arent seen. doesnt make sense that the productdetail method would need it. 
removing it on productdetail param worked.

2/2
Create view workflow:
BACKEND
-view
-serializer
-urls
FRONTEND
-create page 
-import page route to router

4/2
getting 500 server error, path doesnt exist, when creating catagory view. 
the url is showing as catagory/catagory which needsto be changed anyways because of bad UX. 
ill  tinker with the admin/views/url file.
because category slug is same as name?
something inside sql database?
GET method in catagoryDetail class not finding which collumn or row in db.
changed axios route in catagory vue, 404
changed exception in catdetail class in view, 404
debug output is cat object with slug of mens not found in db.
changed name of cat in database to MensWear, still 404
its not because its lowercase is it
yes it was. lesson learned.
--changed the routerlink in app.vue Womens and Mens
--some rountes still need to be fixed, ex cat to cat 
SOLVED

renderign component on homepage is throwing not defined on instance error.
question of scope, remove for method on component so that property is defined in scope
SOLVED

create cart vue
--create page vue
-plug in andconnect vueRouter
-write the backend vue.

6/7
create checkout view
-get items bought and add teh total
-give options to remove and adjust total
-shipping address? and card detaisl
-write the html

7/7
'authorisation credentialsnotprovided ' error on clickig  pay with stripe button. 
-no jwt in settings
-not default rest-auth framework in settings
-credentials seems ok
-could be dotenv isnt passing the key
-not the comma in .env between values
-tried Content-Security-Policy: default-src 'none'; img-src 'self';in index.html
-changed meta csp in html index
-tried chatgdp suggestion add stripe link to settings.py
-found error in shell , dotenv could not parse ...
-removed commas and '' from .env
-changed .env config , imprt os and create objects of env
-checked csp config in firefox
-logged in with admin and now get 400 bad request axios.
-try naked KEY in settings.py
-hardcoded bearer and auth token in request.

13/2
-changed axios to fetch and was able to post to the db
-had to add cors modules to settings.py because images were not rendering due to cross origin error
-throwing 404 error when posting to api/v1/checkout/
-may be because fields in db dont match data fields in post payload
-removed cookie partitioning in firefox config
-maybe change the scheme from html to json
-changed path to localhost 8000 in fetch method, now seeing auth not provided error.
-get tokens from admin page, now throws error that fields are not filled
-added kwargs to serializer to no avail
**get user id with request
**get product and order
---ideas; request userid, kwargs required:false, delete the instances of user, product and order, write additional forms in the checkout-vue templalte, provide all keys in the data list object of the async func, modify serializer or modules and then run makemigrations, add blank=true on fields, 
-i've added the missing fields in the data list object and it has killed the errors. now there is no response from the server. console log is. 
--change amount value to int greater than zero for stripe api. DID IT!!

--New problem, error when getting list of products for account. gives 404 to /v1/orders. 
--write new module class and current_name because attribute error,  update url.py and add app in settings.py, which throws 20 exceptions in the shell. at least it compiles and runs..
--cleanup name conflicts between app2 and order
--throws unothorized error
--json unexpected character error
--fixed by removing jsonparser in response handler
--made migrations which took the order app in settings, ran its models and created tables and admin data.so cool when it works
--now to populate myAccount with items
--


views connects to models, urls connects to views.
